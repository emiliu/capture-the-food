/* == general appearance == */

body {
    font-family: 'Quicksand', 'sans-serif';
}

.main {
    background-color: #E1E6F0;
}

.everything {
    position: absolute;
    width: 100%;
    height: 100%;
}

#content-wrap {
    height: 90%;
    max-height: 90%;
    visibility: hidden;
    position: relative;
}


/* == title == */

#title-wrap {
    position: absolute;
    top: 0;
    width: 100%;
}

#level {
    display: block;
}

.left {
    display: block;
    float: left;
}

.right {
    display: block;
    float: right;
}

h1 {
    font-size: 45px;
    text-align: left;
    font-weight: bolder;
    color:#002E5C;
}

h2, h3 {
    color: #335C85;
}


/* == game space == */

#gametable {
    position: absolute;
    z-index: 90;
}



.cat {
    background-image: url("img/catuse.png");
    background-size: cover
 }

.usable {
    background-image: url("img/usable.png");
    background-size: cover;
}

.used {
    background-image: url("img/used.png");
    background-size: cover;
}

.wall {
    background-image: url("img/wall.png");
    background-size: cover;
}

.flag {
    background-image: url("img/flagsq.png");
    background-size: cover;
}

.catmat {
    background-image: url("img/catmat.png");
    background-size: cover;
}

.start {
    background-image: url("img/start.png");
    background-size: cover;
}

.finish {
    background-image: url("img/finish.png");
    background-size: cover;
}

.key {
    background-image: url("img/keysq.png");
    background-size: cover;
}

.lock {
    background-image: url("img/locksq.png");
    background-size: cover;
}

.mat {
    background-image: url("img/mat.png");
    background-size: cover;
}

table, td {
    border-collapse: collapse;
    border: 0;
}


/* == controls == */

.controls {
    position: absolute;
    left: 50%;
    -webkit-transform: translateX(-50%);
    -moz-transform: translateX(-50%);
    -o-transform: translateX(-50%);
    transform: translateX(-50%);
    width: 90%;
    bottom: 0;
}

.btn {
    /* overriding default bootstrap */
    font-family: 'Quicksand';
    display: inline;
}

#audiobox, #tut, #restart, .inrow, .gcb {
    display: inline;
}

#audiobox {
    float: right;
}

i {
    color: #337AB7;
    margin: 20px 0;
}

a, a:hover {
    text-decoration: none;
}


/* == end screen == */

.end {
    display: none;
    width: 710px;
    position: absolute;
}

.end iframe {
    width: 710px;
}


/* == loading screen == */

.loader {
    position: fixed;
    z-index: 99;
    width: 100%;
    height: 100%;
    background: url('img/catcatloader.png') no-repeat fixed center;
    -webkit-animation: spin 2s linear infinite;
    -moz-animation: spin 2s linear infinite;
    -o-animation: spin 2s linear infinite;
    animation: spin 2s linear infinite;
}

@-moz-keyframes spin {
    from { -moz-transform: rotate(0deg); }
    to { -moz-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
    from { -webkit-transform: rotate(0deg); }
    to { -webkit-transform: rotate(360deg); }
}
@keyframes spin {
    from {transform:rotate(0deg);}
    to {transform:rotate(360deg);}
}


/* == tutorial == */

.tutorial {
    font-size: 16px;
}

.tutorial p {
    margin: 20px;
}

.center {
    text-align: center;
}


/* == creator == */

.creator #gametable {
    position: static;
    transform: none;
}

.creator #content-wrap {
    width: 90%;
    position: static;
    transform: none;
    margin: 10px auto;
}

.creator #title-wrap {
    position: static;
}

.creator .controls {
    position: static;
    transform: none;
}

#options, #current {
    display: inline-table;
}

#selector {
    width: 150px;
    height: 150px;
}

#test {
    display: none;
}


/* == user levels == */

#levels {
    text-align: center;
    position: absolute;
}


/* == iframe == */

iframe {
    border: none;
    width: 200px;
    height: 260px;
}

.ss-form {
    width: 710px;
    text-align: center;
    margin: 0 auto;
}

input[type=submit] {
    position: absolute;
    margin-top: 10px;
}

.ss-form h1 {
    font-size: 30px;
    font-weight: bolder;
    color: #002E5C;
    text-align: center;
}


/* == index == */

#main-menu {
    position: absolute;
    width: 80%;
    top: 40%;
}


/* == position center == */

.center-x {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -moz-transform: translateX(-50%);
    -o-transform: translateX(-50%);
    transform: translateX(-50%);
}

.center-xy {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
}
